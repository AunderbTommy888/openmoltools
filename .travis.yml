language: c
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
      - g++
      - gfortran
      - valgrind
      - csh
      - g++-multilib
      - gcc-multilib

branches:
  only:
    - master

env:
  matrix:
    - PYTHON_VER=3.6 OPENMM_CHANNEL=omnia
    - PYTHON_VER=3.7 OPENMM_CHANNEL=omnia
    - PYTHON_VER=3.6 OPENMM_CHANNEL=omnia-dev
    - PYTHON_VER=3.7 OPENMM_CHANNEL=omnia-dev

  global:
    # Location of decrypted OpenEye license file
    - OE_LICENSE="$HOME/oe_license.txt"
    # encrypted BINSTAR_TOKEN for push of dev package to binstar
    - secure: "S9I5imZ0CJdwfhHzy+Beh8NTFm2ZYpMFCLgvBYT/UsifIKlGynUK2xGi7bDnHLpslT45FUMmjzdpf2QNrfbivVJgiSDTQJc1GCIqGFFKFqerJEEYUkXlBxvWNO+poSOMIzkJqd7xsTodt4CYhGJM1dT6ocaSM7UJgAErrcRJfLo="

branches:
  only:
    - master

before_install:
  # Additional info about the build
  - uname -a
  - df -h
  - ulimit -a
  # Install Conda and dependencies
  - source devtools/travis-ci/install.sh
  # Activate miniconda
  - eval "$($HOME/miniconda/bin/conda shell.bash hook)"
  # Check Python version
  - python -V
  # Unpack encrypted OpenEye license file
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ] ; then openssl aes-256-cbc -K $encrypted_751d8ffa39c6_key -iv $encrypted_751d8ffa39c6_iv -in oe_license.txt.enc -out $HOME/oe_license.txt -d; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == false ] ; then echo "OpenEye license will not be installed in pull request."; fi

install:
  # Activate miniconda
  - eval "$($HOME/miniconda/bin/conda shell.bash hook)"
  # Create test environment for package
  - conda create --yes -n test python=$PYTHON_VER pip codecov pytest pytest-cov conda-build jinja2 anaconda-client
  - conda activate test
  # Install the OpenEye toolkit
  - conda install --yes -c openeye openeye-toolkits && python -c "import openeye; print(openeye.__version__)"
  # Install other testing dependencies
  - conda install --yes --quiet nose nose-timer
  - conda install --yes --quiet -c $OPENMM_CHANNEL openmm
  - conda install --yes --quiet openmmtools
  - conda install --yes --quiet packmol
  - conda install --yes --quiet rdkit
  # Build the conda package
  - conda build --python=$PYTHON_VER devtools/conda-recipe
  - conda install --yes --use-local openmoltools-dev

script:
  - nosetests --nocapture openmoltools/tests/test_forcefield_generators.py
  - pytest -v --cov=openmoltools --cov-config setup.cfg openmoltools/tests/

notifications:
  email: false

after_success:
  - codecov
